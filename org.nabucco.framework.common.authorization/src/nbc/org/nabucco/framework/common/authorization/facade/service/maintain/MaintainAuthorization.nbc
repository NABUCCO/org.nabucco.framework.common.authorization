/*
* Copyright 2010 PRODYNA AG
*
* Licensed under the Eclipse Public License (EPL), Version 1.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.opensource.org/licenses/eclipse-1.0.php or
* http://nabuccosource.org/License.html
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package org.nabucco.framework.common.authorization.facade.service.maintain;

import org.nabucco.framework.base.facade.exception.service.MaintainException;
import org.nabucco.framework.common.authorization.facade.message.AuthorizationGroupListMsg;
import org.nabucco.framework.common.authorization.facade.message.maintain.AuthorizationGroupMaintainMsg;
import org.nabucco.framework.common.authorization.facade.message.maintain.AuthorizationPermissionMaintainMsg;
import org.nabucco.framework.common.authorization.facade.message.maintain.AuthorizationRoleMaintainMsg;
import org.nabucco.framework.common.authorization.facade.message.maintain.AuthorizationUserMaintainMsg;

@Author				Nicolas Moser
@Company			PRODYNA AG
@Date				2010-01-18
@Version			1.0
@Description		Authorization maintenance service
public Service MaintainAuthorization  {

	@ManualImplementation
	@JoinPoint		org.nabucco.aspect.permissioning
	@JoinPoint		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.resolving
	@Description	Maintain a single authorization group to the database.
	public AuthorizationGroupMaintainMsg maintainAuthorizationGroup(AuthorizationGroupMaintainMsg groupMsg)
		throws MaintainException;

	@ManualImplementation
	@JoinPoint		org.nabucco.aspect.permissioning
	@JoinPoint		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.resolving
	@Description	Maintain a list of authorization group to the database.
	public AuthorizationGroupListMsg maintainAuthorizationGroupList(AuthorizationGroupListMsg groupListMsg)
		throws MaintainException;
	
	@ManualImplementation
	@JoinPoint		org.nabucco.aspect.permissioning
	@JoinPoint		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.resolving
	@Description	Maintain a single authorization user to the database.
	public AuthorizationUserMaintainMsg maintainAuthorizationUser(AuthorizationUserMaintainMsg userMsg)
		throws MaintainException;
		
	
	@ManualImplementation
	@JoinPoint		org.nabucco.aspect.permissioning
	@JoinPoint		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.resolving
	@Description	Maintain a single authorization role to the database.
	public AuthorizationRoleMaintainMsg maintainAuthorizationRole(AuthorizationRoleMaintainMsg roleMsg)
		throws MaintainException;
		
		
	@ManualImplementation
	@JoinPoint		org.nabucco.aspect.permissioning
	@JoinPoint		org.nabucco.aspect.validating
	@JoinPoint		org.nabucco.aspect.resolving
	@Description	Maintain a single authorization permission to the database.
	public AuthorizationPermissionMaintainMsg maintainAuthorizationPermission(AuthorizationPermissionMaintainMsg permissionMsg)
		throws MaintainException;

}

